@page "/incident"
@page "/incident/{Id}"
@using IncidentReporter.Shared
@inject IUriHelper UriHelper
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<form class="incident-report-form" method="post">
    <div class="background fieldset">
        <div class="d-flex justify-content-between align-items-center">
            <h2>Incident</h2>
            <code>@Id</code>
        </div>
        <div class="row">
            <div class="form-group col-3">
                <label for="date">Date</label>
                <input type="datetime" id="date" bind="@incident.Date" class="form-control" />
            </div>
            <div class="form-group col-9">
                <label for="summary">Summary</label>
                <input type="text" id="summary" bind="@incident.Summary" class="form-control" />
            </div>
        </div>
    </div>

    <div class="actions-taken fieldset">
        <h2>Actions Taken</h2>
        <ActionsTaken Actions="@actionsTaken" />
    </div>

    <div class="report fieldset">
        <h2>Report</h2>
        <div class="form-group">
            <label for="root-cause">Root Cause</label>
            <textarea type="text" id="root-case" bind="@incident.RootCause" class="form-control" />
        </div>
        <div class="form-group">
            <label for="trigger">Trigger</label>
            <textarea type="text" id="trigger" bind="@incident.Trigger" class="form-control" />
        </div>
        <div class="form-group">
            <label for="detection">Detection</label>
            <textarea type="text" id="detection" bind="@incident.Detection" class="form-control" />
        </div>
        <div class="form-group">
            <label for="impact">Impact</label>
            <textarea type="text" id="impact" bind="@incident.Impact" Class="form-control" />
        </div>
        <div class="form-group">
            <label for="resolution">Resolution</label>
            <textarea type="text" id="resolution" bind="@incident.Resolution" class="form-control" />
        </div>
        <div class="form-group">
            <label for="lessons-learned">Lessons Learned</label>
            <textarea type="text" id="lessons-learned" bind="@incident.LessonsLearned" class="form-control" />
        </div>
    </div>
    <div class="actions d-flex justify-content-between align-items-center">
        <button class="return-button btn btn-outline-secondary" type="button" onclick="@(() => UriHelper.NavigateTo("/"))">Return</button>
        <div class="group"></div>
        <div class="custom-control-lg custom-control custom-checkbox mr-4">
            <input type="checkbox" id="is-resolved" bind="@incident.IsResolved" class="custom-control-input" />
            <label class="custom-control-label" for="is-resolved">Is Resolved</label>
        </div>
        <button class="btn btn-primary" type="button" onclick="@Submit">Save and Close</button>
    </div>
</form>


@functions {
    [Parameter]
    private string Id { get; set; }

    private Incident incident = new Incident();
    private List<ActionTaken> actionsTaken = new List<ActionTaken>();


    protected override async Task OnInitAsync()
    {
        if (Id != null)
        {
            incident = await Http.GetJsonAsync<Incident>($"api/Incident/{Id}");
            actionsTaken.AddRange(incident.ActionsTaken ?? new List<ActionTaken>());
        }
        else
        {
            DateTime incidentCreationTimestamp = DateTime.Now;
            incident = new Incident
            {
                Id = incidentCreationTimestamp.ToString("ddMMyyhhmmss"),
                Date = incidentCreationTimestamp,
                Summary = $"Incident at {incidentCreationTimestamp.ToLongDateString()} {incidentCreationTimestamp.ToLongTimeString()}"
            };
            Id = incident.Id;
            await JSRuntime.InvokeAsync<string>("ReplaceState", $"incident/{incident.Id}");
        }
    }

    private async Task Submit()
    {
        incident.ActionsTaken = actionsTaken;
        await Http.SendJsonAsync(HttpMethod.Post, @"api/Incident", incident);
        UriHelper.NavigateTo("/");
    }
}
