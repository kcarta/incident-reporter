@page "/incident"
@page "/incident/{Id}"
@using IncidentReporter.Shared
@inject IUriHelper UriHelper
@inject HttpClient Http

<h2>Viewing Incident: @Id</h2>

<EditForm Model="@incident" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="date">Date</label>
        <InputDate Id="date" bind-Value="@incident.Date" Class="form-control" />
    </div>
    <div class="form-group">
        <label for="summary">Summary</label>
        <InputText Id="summary" bind-Value="@incident.Summary" Class="form-control" />
    </div>
    <div class="form-group">
        <label for="impact">Impact</label>
        <InputText Id="impact" bind-Value="@incident.Impact" Class="form-control" />
    </div>
    <div class="form-group">
        <label for="root-causes"></label>
    </div>
    <div class="form-group">
        <label for="trigger">Trigger</label>
        <InputText Id="trigger" bind-Value="@incident.Trigger" Class="form-control" />
    </div>
    <div class="form-group">
        <label for="resolution">Resolution</label>
        <InputText Id="resolution" bind-Value="@incident.Resolution" Class="form-control" />
    </div>
    <div class="form-group">
        <label for="detection">Detection</label>
        <InputText Id="detection" bind-Value="@incident.Detection" Class="form-control" />
    </div>
    <div class="form-group">
        <label for="actions-taken"></label>
    </div>
    <div class="form-group">
        <label for="work-items"></label>
    </div>
    <div class="form-group">
        <label for="lessons-learned"></label>
    </div>

    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>


@functions {
    [Parameter]
    private string Id { get; set; }

    private Incident incident;

    protected override async Task OnInitAsync()
    {
        if (Id != null)
        {
            incident = await Http.GetJsonAsync<Incident>($"api/Incident/{Id}");
        }
        else
        {
            incident = new Incident
            {
                Id = DateTime.Now.ToString("ddMMyyhhmm"),
                Date = DateTime.Now
            };
            Id = incident.Id;
        }
    }

    private async Task HandleValidSubmit()
    {
        await Http.SendJsonAsync(HttpMethod.Post, @"api/Incident", incident);
        UriHelper.NavigateTo("/");
    }
}